=================
====  JSON  =====
=================
Use SpanJson -> https://github.com/Tornhoof/SpanJson -> Very fast, simple -> Benchmark: https://github.com/AmirHJabari/JsonBenchmark.Net
Compability: 
!Only newtonsoft json supports property names without quotes. System.Text.Json, NetJson, SpanJson, Utf8Json don't support it.
SpanJson doesn't support scientific notation for integer numbers (int, long, ..).
SpanJson has problem with case-sensetive names. Don't use field/properties with the same case insensitive names, read-only fields/properties, ...

=================
====  ZIP  =====
=================
Libraries:
7-Zip.CommandLine -> fastest write and better compression -> only save from disk folder
https://github.com/squid-box/SevenZipSharp -> .NetCore wrapper for 7-zip -> fastest write and better compression -> best for save from disk folder and from RAM
Examples of code: https://github.com/tomap/SevenZipSharp/blob/master/SevenZipTest/Program.cs (for .Net Framework 4.5)
SevenZipSharp has event for execution progress ant others (SevenZipCompressor.FileCompressionStarted, ..)

System.IO.Compression.ZipFile -> fastest read

READ: Use  System.IO.Compression -> faster then 7za, SevenZipExtractor (wrapper of 7-Zip for read only)
CREATE ZIP FROM MEMORY: Use  System.IO.Compression; 7za.dll with RedirectStandardInput is very..very slowly
CREATE ZIP FROM DISK FOLDER: Use SevenZipSharp (7z.dll) -> better compression, faster

Test results for CreateZip from disk folder (~6 GB data, ~1 GB zip file):
	- 64 bits (1900 7-zip version, 2019-02-21): 7za.exe, 7z.exe, 7z.dll (SevenZipSharp): 215 secs (first run, disk cache empty), 180 secs (second run with full disk cache)
	- 64 bits (2301 7-zip version, 2023-06-20): 7za.exe, 7z.exe, 7z.dll (SevenZipSharp): 270 secs (first run, disk cache empty), 175 secs (second run with full disk cache)
	- 64 bits (2400 7-zip version, 2024-01-30): 7z.dll (SevenZipSharp): 270 secs (first run, disk cache empty), 218 secs (second run with full disk cache)
	- 0920 (2009 year), 1604 (2016 year) versions of 7-zip were also tested
	- System.IO.Compression.ZipFile: 336 secs, zip file is 20% bigger than 7zip archive

Performance doesn't depend on 7z method type (7za.exe, 7z.exe, 7z.dll (Squid-Box.SevenZipSharp or Squid-Box.SevenZipSharp.Lite)). It depends on 7zip version only.


